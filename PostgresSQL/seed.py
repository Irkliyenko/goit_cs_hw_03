from faker import Faker
from random import randint, choice
import psycopg2

NUMBER_USERS = 30
NUMBER_STATUSES = 3  # Since you have 3 status types


def generate_fake_data():
    fake = Faker()
    fake_users = [(fake.name(), fake.email()) for _ in range(NUMBER_USERS)]
    fake_tasks = [(fake.sentence(), fake.text(), randint(
        1, NUMBER_STATUSES), randint(1, NUMBER_USERS)) for _ in range(NUMBER_USERS)]
    fake_statuses = [('new',), ('in progress',), ('completed',)]
    return fake_users, fake_tasks, fake_statuses


def insert_data_to_db(users, tasks, statuses):
    # Adjust the connection parameters as needed
    conn = psycopg2.connect(
        "dbname='postgres' user='postgres' host='localhost' password='test1of2postgre3@'")
    cur = conn.cursor()

    # Insert statuses
    cur.executemany("INSERT INTO status (name) VALUES (%s)", statuses)

    # Insert users
    cur.executemany(
        "INSERT INTO users (fullname, email) VALUES (%s, %s)", users)

    # Insert tasks
    # Note: Ensure the `description` column can accept the length of text generated by `fake.text()`
    cur.executemany(
        "INSERT INTO task (title, description, status_id, user_id) VALUES (%s, %s, %s, %s)", tasks)

    conn.commit()
    cur.close()
    conn.close()


if __name__ == "__main__":
    users, tasks, statuses = generate_fake_data()
    insert_data_to_db(users, tasks, statuses)
